version: "3.8"
services:

    postgres:
      image: postgres:latest
      container_name: postgres_db
      restart: always
      environment:
        POSTGRES_USER: "${DB_USER}"
        POSTGRES_PASSWORD: "${DB_PASS}"
        POSTGRES_DB: "${DB_NAME}"
      ports:
        - "5432:5432"
      volumes:
        - postgresql-data:/var/lib/postgresql/data
        - ./docker/db/init.sql:/docker-entrypoint-initdb.d/init.sql
        - .env

      healthcheck:
        test: ["CMD-SHELL", "pg_isready"]
        interval: 5s
        timeout: 5s
        retries: 5
      networks:
        - chapiana

    api:
      build: ./
      env_file: .env
      command: >
        bash -c "python wait_for_postgres.py &&
                ./manage.py migrate &&
                ./manage.py runserver 0.0.0.0:8000
                gunicorn config.wsgi:application --bind 0.0.0.0:8000"
      depends_on:
        - postgres
        - redis
      environment:
        - DJANGO_SECRET_KEY: "local"
      ports:
        - "8000:8000"
      restart: unless-stopped
      volumes:
        - static_volume:/opt/chapiana/static
        - media_volume:/opt/chapiana/media
      networks:
        - chapiana

    redis:
      image: redis:latest
      container_name: redis_cache
      restart: always
      command:
        - --loglevel warning
      volumes:
        - redis-data:/data:Z
      ports:
        - "6379:6379"
      networks:
        - chapiana

    nginx:
      image: nginx:latest
      container_name: nginx_proxy
      restart: always
      build: ./nginx/
      ports:
        - "80:80"
        - "443:443"
      volumes:
        - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
        - static_volume:/opt/chapiana/static
        - media_volume:/opt/chapiana/media
        - ./nginx/ssl:/etc/nginx/ssl
      depends_on:
        - api
      networks:
        - chapiana

networks:
  chapiana:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume:
